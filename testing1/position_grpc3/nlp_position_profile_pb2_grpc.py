# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import nlp_position_profile_pb2 as nlp__position__profile__pb2


class CVAggregationStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Compute = channel.unary_unary(
        '/nlpPositionProfile.CVAggregation/Compute',
        request_serializer=nlp__position__profile__pb2.CVAggregationRequest.SerializeToString,
        response_deserializer=nlp__position__profile__pb2.CVAggregationResponse.FromString,
        )


class CVAggregationServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CVAggregationServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=nlp__position__profile__pb2.CVAggregationRequest.FromString,
          response_serializer=nlp__position__profile__pb2.CVAggregationResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nlpPositionProfile.CVAggregation', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class JDAnalysisStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Compute = channel.unary_unary(
        '/nlpPositionProfile.JDAnalysis/Compute',
        request_serializer=nlp__position__profile__pb2.JDAnalysisRequest.SerializeToString,
        response_deserializer=nlp__position__profile__pb2.JDAnalysisResponse.FromString,
        )


class JDAnalysisServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_JDAnalysisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=nlp__position__profile__pb2.JDAnalysisRequest.FromString,
          response_serializer=nlp__position__profile__pb2.JDAnalysisResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nlpPositionProfile.JDAnalysis', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class UnderProfileStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Compute = channel.unary_unary(
        '/nlpPositionProfile.UnderProfile/Compute',
        request_serializer=nlp__position__profile__pb2.UnderProfileRequest.SerializeToString,
        response_deserializer=nlp__position__profile__pb2.UnderProfileResponse.FromString,
        )


class UnderProfileServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UnderProfileServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=nlp__position__profile__pb2.UnderProfileRequest.FromString,
          response_serializer=nlp__position__profile__pb2.UnderProfileResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nlpPositionProfile.UnderProfile', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class GenAxis2Axis3ProfileStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Compute = channel.unary_unary(
        '/nlpPositionProfile.GenAxis2Axis3Profile/Compute',
        request_serializer=nlp__position__profile__pb2.GenAxis2Axis3ProfileRequest.SerializeToString,
        response_deserializer=nlp__position__profile__pb2.GenAxis2Axis3ProfileResponse.FromString,
        )


class GenAxis2Axis3ProfileServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GenAxis2Axis3ProfileServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=nlp__position__profile__pb2.GenAxis2Axis3ProfileRequest.FromString,
          response_serializer=nlp__position__profile__pb2.GenAxis2Axis3ProfileResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nlpPositionProfile.GenAxis2Axis3Profile', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
